#!/usr/bin/env python

##### EXPLORING DATASETS IN WEEK 1 DOCUMENTATION ##### Completed in Jupyter Notebook. 

###### Six hashtags is a to-do task.
### Three hashtags is a random comment.

# 1. Import everything I might possibly need. ---------------------------------------
import matplotlib.pyplot as plt; import numpy as np; import netCDF4; from netCDF4 import Dataset
import pandas as pd; import numpy.ma as ma; import time as timeit; import os; import math; import numpy as np
import itertools; import scipy.io; import mat73

import cartopy; import cartopy.crs as ccrs
from cartopy.mpl.gridliner import LONGITUDE_FORMATTER, LATITUDE_FORMATTER

%matplotlib inline

# 2. Data exploration and running files. --------------------------------------------
### For 2015 to 2019 data, set range 2015 to 2020 and set year = 2015.
### For 2012 and 2014 data, set range 2012 to 2013 and range 2014 to 2015 respectively.
###### I don't know what to do with the v7.3 files. 
###### Define season days.
### Try with summer months considered to be days 200 to 290 approximately. 
season_start_day = 200
season_end_day = 290

year = 1977
for year in range(1977, 2010): 
    filename = 'casts_{}.mat'.format(year)
    file = scipy.io.loadmat(filename,squeeze_me=True)
    npfile = file['casts_{}'.format(year)]
    for i in range(len(npfile)):
        if npfile[i][4] > season_start_day and npfile[i][4] < season_end_day: 
            print('year:', year, 'day:', npfile[i][4],'depth:', npfile[i][6])
            plt.style.use('ggplot')        
            plt.subplot(1, 3, 1) ### Plotting temperature and pressuure plots
            plt.plot(npfile[i][11],npfile[i][12]*-1,color='blue')
            plt.xlabel('Temperature')
            plt.ylabel('Pressure')        
            plt.subplot(1, 3, 2) ### Plotting salinity and pressuure plots
            plt.plot(npfile[i][10],npfile[i][12]*-1,color='red')
            plt.xlabel('Salinity')
            plt.ylabel('Pressure')
            plt.tight_layout()
            plt.show()
            plt.subplot(1, 3, 3) ### Plotting location of cast
            ax = plt.axes(projection=ccrs.PlateCarree())
            ax.set_extent([-78, -65, 34, 44.5], ccrs.PlateCarree())
            ax.add_feature(cartopy.feature.COASTLINE, linewidth=1.5)
            gl = ax.gridlines(crs=ccrs.PlateCarree(), draw_labels=True,linewidth=1, color='gray', alpha=0.5, linestyle='--')
            gl.xlabels_top = False; gl.ylabels_left = False
            gl.xformatter = LONGITUDE_FORMATTER; gl.yformatter = LATITUDE_FORMATTER
            ax.scatter([npfile[i][2]*-1],[npfile[i][1]],transform=ccrs.PlateCarree())
            plt.show()
        else:
            pass

mat2012 = scipy.io.loadmat('casts_2012.mat')
mat2014 = scipy.io.loadmat('casts_2012.mat')
